# Source: kubeinvaders/templates/secrets.yaml
kind: Secret
apiVersion: v1
metadata:
  labels:
    app: kubeinvaders
    chart: kubeinvaders
    release: kubeinvaders
    heritage: Helm
  name: kubeinvaders-token
  namespace: kubeinvaders
  annotations:
    kubernetes.io/service-account.name: kubeinvaders
type: kubernetes.io/service-account-token
---
# Source: kubeinvaders/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kubeinvaders
  labels:
    app: kubeinvaders
    chart: kubeinvaders-0.1.1
    release: kubeinvaders
    heritage: Helm
rules:
  - apiGroups: [""]
    resources: ["pods","pods/log"]
    verbs: ["get", "watch", "list", "delete"]
---
# Source: kubeinvaders/templates/rbac.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: kubeinvaders
  labels:
    app: kubeinvaders
    chart: kubeinvaders-0.1.1
    release: kubeinvaders
    heritage: Helm
subjects:
  - kind: ServiceAccount
    name: kubeinvaders
    namespace: kubeinvaders
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kubeinvaders
---
# Source: kubeinvaders/templates/rbac-role.yaml
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: kubeinvaders-role
  namespace: kubeinvaders
  labels:
    app: kubeinvaders
    chart: kubeinvaders-0.1.1
    release: kubeinvaders
    heritage: Helm
rules:
  - apiGroups: [""]
    resources: ["pods", "pods/log"]
    verbs: ["get", "list", "delete"]
---
# Source: kubeinvaders/templates/rbac-role.yaml
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: kubeinvaders-rolebinding
  namespace: kubeinvaders
  labels:
    app: kubeinvaders
    chart: kubeinvaders-0.1.1
    release: kubeinvaders
    heritage: Helm
subjects:
  - kind: ServiceAccount
    name: kubeinvaders
    namespace: kubeinvaders
roleRef:
  kind: Role
  name: kubeinvaders-role
  apiGroup: rbac.authorization.k8s.io
---
# Source: kubeinvaders/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: kubeinvaders
  labels:
    app.kubernetes.io/name: kubeinvaders
    helm.sh/chart: kubeinvaders-0.1.1
    app.kubernetes.io/instance: kubeinvaders
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 8080
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: kubeinvaders
    app.kubernetes.io/instance: kubeinvaders
---
# Source: kubeinvaders/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kubeinvaders
  labels:
    app.kubernetes.io/name: kubeinvaders
    helm.sh/chart: kubeinvaders-0.1.1
    app.kubernetes.io/instance: kubeinvaders
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: kubeinvaders
      app.kubernetes.io/instance: kubeinvaders
  template:
    metadata:
      labels:
        app.kubernetes.io/name: kubeinvaders
        app.kubernetes.io/instance: kubeinvaders
    spec:
      containers:
        - env:
            - name: ROUTE_HOST
              value: "kubeinvaders.$(hostname)"
            - name: NAMESPACE
              value: observability,istio-system,steve
            - name: TOKEN
              valueFrom:
                secretKeyRef:
                  key: token
                  name: kubeinvaders-token
            - name: HITSLIMIT
              value: "1"
            - name: ALIENPROXIMITY
              value: "15"
            - name: UPDATETIME
              value: "1"
          envFrom:
            - configMapRef:
                name: configs
          name: kubeinvaders
          image: "luckysideburn/kubeinvaders:latest"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {}
---
# Source: kubeinvaders/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kubeinvaders
  labels:
    app: kubeinvaders
    chart: kubeinvaders-0.1.1
    release: kubeinvaders
    heritage: Helm
---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: vs
  namespace: kubeinvaders
spec:
  hosts:
    - "kubeinvaders.$(hostname)"
  gateways:
    - public-gateway.istio-system.svc.cluster.local
  http:
    - route:
        - destination:
            port:
              number: 8080
            host: kubeinvaders